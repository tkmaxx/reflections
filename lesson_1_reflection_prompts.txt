How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    - don't need to read through two files

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    - easy to go back to a specific point in development timeline

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    - easier navigation along the history, commits done with logical milestones. Downside that some steps may be lost

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    - oftentimes coding projects involve working on multiple files. Most Google Docs users would be working on a single file and commit when done

How can you use the commands git log and git diff to view the history of files?

    - git log lists all commits and git diff compares two specific commits (defined by their IDs)

How might using version control make you more confident to make changes that
could break something?

    - git makes it very easy to go back to an earlier working version

Now that you have your workspace set up, what do you want to try using Git for?

    - Initially I wanted to use it as means of sharing depository but now I also will utilise a nice and clean way of managing changes in the code
